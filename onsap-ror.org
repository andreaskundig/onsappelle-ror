#+title: Onsap Ror
[[file:/mnt/c/Users/andre/workspace/onsappelle/onsappelle.org::][spec...]]

* TODO landing page

** button/link to remove user

** create users during reminder creation
users are created when add user is pressed
it would be better to create them only after
create reminder is pressed.

It was first done this way and unfortunately they all had the same id, which prevented displaying several of them
** should there be only one email input?
added users could be hidden inputs + just text

* doc for pages (+ turbo_frames)
** add recipient to new reminder
[[file:app/views/reminders/new.html.erb::<%= render "form", reminder: @reminder %>][reminders/new]] renders
[[file:app/views/reminders/_form.html.erb::<%= render 'users/user_inputs', user: User.new %>][reminders/form]] which renders
[[file:app/views/users/_user_inputs.html.erb::<%= text_field_tag 'user\[email\]', '' %>][users/user_inputs]] which has a input field for the email
and posts to new_user_inputs_paths
which is configured in [[file:config/routes.rb::post 'new_user_inputs', to: 'users#new_inputs'][routes.rb]]
and calls [[file:app/controllers/users_controller.rb::def new_inputs][users_controller.new_inputs]]
which finds or creates a user
and returns [[file:app/views/users/new_inputs.turbo_stream.erb::<%= turbo_stream.append "recipients",][new_inputs.turbo_stream.erb]]
which changes reminders/form by
- adding a recipient with [[file:app/views/users/_user_hidden_inputs.html.erb::<%= hidden_field_tag 'users\[\]\[email\]', user.email, id: user.id %>][users/user_hidden_inputs]]
- displaying any errors in [[file:app/views/users/_user_inputs.html.erb::<% user.errors.full_messages_for(:email).each do |message| %>][users/user_inputs]]
- removing previous recipient errors

** remove recipient from new reminder
every recipient has an id build from the email
and a [-] link from [[file:app/views/users/_user_hidden_inputs.html.erb::<%= link_to '\[-\]',][users/user_hidden_inputs]]
which posts delete to remove_user_inputs_path
which is configured in [[file:config/routes.rb::delete 'remove_user_inputs/:email_code', to: 'users#remove_inputs', as: :remove_user_inputs][routes.rb]]
and calls [[file:app/controllers/users_controller.rb::def remove_inputs][users_controller.remove_inputs]]
which returns [[file:app/views/users/remove_inputs.turbo_stream.erb::<%= turbo_stream.remove "recipient_#{@email_code}" %>][remove_inputs.turbo_stream.rb]]
which removes the recipient where the [-] was clicked

* TODO show page: edit date, more validation
activate reminder
- validation: date + emails > 0

* TODO active/inactive reminders ?

* TODO rename reminder.users to .recipients
* TODO send emails at reminder date
* TODO refactor: remove unused routes controller methods
* TODO [[https://github.com/paper-trail-gem/paper_trail][paper_trail]] for reminders and  user_reminders
* TODO passwordless authentication by email
gem
https://github.com/mikker/passwordless

handrolled
https://blog.testdouble.com/posts/2022-10-25-building-passwordless-email-auth-in-rails/
with token
https://dev.to/phawk/password-less-auth-in-rails-4ah

* steps

[[https://guides.rubyonrails.org/association_basics.html#choosing-between-has-many-through-and-has-and-belongs-to-many][has-many :through relation]]
#+begin_src bash

$ rails new onsappelle-ror
$ cd onsappelle-ror

$ bin/rails generate model User email:string
$ bin/rails generate model Reminder date:datetime
$ bin/rails generate model UserReminder user:references reminder:references

$ bin/rails db:migrate

$ bin/rails generate controller Reminders index
$ bin/rails generate controller Users
#+end_src

* language server: solargraph
https://emacs-lsp.github.io/lsp-mode/page/lsp-solargraph/
https://github.com/castwide/solargraph
https://github.com/iftheshoefritz/solargraph-rails/
#+begin_src bash
gem install solargraph
gem install solargraph-rails
#+end_src
