#+title: Onsap Ror
[[file:/mnt/c/Users/andre/workspace/onsappelle/onsappelle.org::][spec...]]

* TODO landing page

** button/link to remove user

** create users during reminder creation
users are created when add user is pressed
it would be better to create them only after
create reminder is pressed.

It was first done this way and unfortunately they all had the same id, which prevented displaying several of them
** should there be only one email input?
added users could be hidden inputs + just text

* doc for pages (+ turbo_frames)
** add recipient to new reminder
[[file:app/views/reminders/new.html.erb::<%= render "form", reminder: @reminder %>][reminders/new]] renders
[[file:app/views/reminders/_form.html.erb::<%= render 'users/user_inputs', user: User.new %>][reminders/form]] which renders
[[file:app/views/users/_user_inputs.html.erb::<%= text_field_tag 'user\[email\]', '' %>][users/user_inputs]] which has a input field for the email
and posts to new_user_inputs_paths
which is configured in [[file:config/routes.rb::post 'new_user_inputs', to: 'users#new_inputs'][routes.rb]]
and calls [[file:app/controllers/users_controller.rb::def new_inputs][users_controller.new_inputs]]
which finds or creates a user
and returns [[file:app/views/users/new_inputs.turbo_stream.erb::<%= turbo_stream.append "recipients",][new_inputs.turbo_stream.erb]]
which changes reminders/form by
- adding a recipient with [[file:app/views/users/_user_hidden_inputs.html.erb::<%= hidden_field_tag 'users\[\]\[email\]', user.email, id: user.id %>][users/user_hidden_inputs]]
- displaying any errors in [[file:app/views/users/_user_inputs.html.erb::<% user.errors.full_messages_for(:email).each do |message| %>][users/user_inputs]]
- removing previous recipient errors

** remove recipient from new reminder
every recipient has an id build from the email
and a [-] link from [[file:app/views/users/_user_hidden_inputs.html.erb::<%= link_to '\[-\]',][users/user_hidden_inputs]]
which posts delete to remove_user_inputs_path
which is configured in [[file:config/routes.rb::delete 'remove_user_inputs/:email_code', to: 'users#remove_inputs', as: :remove_user_inputs][routes.rb]]
and calls [[file:app/controllers/users_controller.rb::def remove_inputs][users_controller.remove_inputs]]
which returns [[file:app/views/users/remove_inputs.turbo_stream.erb::<%= turbo_stream.remove "recipient_#{@email_code}" %>][remove_inputs.turbo_stream.rb]]
which removes the recipient where the [-] was clicked

* TODO show page: edit date, more validation
activate reminder
- validation: date + emails > 0

* TODO active/inactive reminders ?
* TODO ensure email field is empty at page load
find out how this is filled...
* TODO rename reminder.users to .recipients
* TODO send emails at reminder date
* TODO refactor: remove unused routes controller methods
* TODO [[https://github.com/paper-trail-gem/paper_trail][paper_trail]] for reminders and  user_reminders
* TODO passwordless authentication by email
gem
https://github.com/mikker/passwordless

handrolled
https://blog.testdouble.com/posts/2022-10-25-building-passwordless-email-auth-in-rails/
with token
https://dev.to/phawk/password-less-auth-in-rails-4ah
* TODO Active Job adapter w persistent backend (sidekiq resque)
as recommended in the [[https://guides.rubyonrails.org/action_mailer_basics.html#calling-the-mailer][mailer doc]]

* first steps

[[https://guides.rubyonrails.org/association_basics.html#choosing-between-has-many-through-and-has-and-belongs-to-many][has-many :through relation]]
#+begin_src bash

$ rails new onsappelle-ror
$ cd onsappelle-ror

$ bin/rails generate model User email:string
$ bin/rails generate model Reminder date:datetime
$ bin/rails generate model UserReminder user:references reminder:references

$ bin/rails db:migrate

$ bin/rails generate controller Reminders index
$ bin/rails generate controller Users
#+end_src
[[https://guides.rubyonrails.org/action_mailer_basics.html][generating a mailer]]
#+begin_src bash
bin/rails generate mailer User
#+end_src

** gmail
choose 2 factor authentication and use app password
* language server
** finally chose ruby-lsp
** solargraph
https://emacs-lsp.github.io/lsp-mode/page/lsp-solargraph/
https://github.com/castwide/solargraph
https://github.com/iftheshoefritz/solargraph-rails/
#+begin_src bash
gem install solargraph
gem install solargraph-rails
#+end_src
* deployment
https://www.hostingadvice.com/how-to/best-ruby-on-rails-hosting/
** ovh 3.50/month
https://www.ovhcloud.com/fr/vps/compare/
** digitalocean 4$/month
https://www.digitalocean.com/pricing/droplets#basic-droplets

** deployment on fly.io (5$ /month)
https://fly.io/docs/hands-on/launch-app/

generate fly.toml
#+begin_src bash
$ fly launch --image flyio/hellofly:latest
Using image flyio/hellofly:latest
Creating app in /home/andre/workspace/onsappelle-ror
We're about to launch your app on Fly.io. Here's what you're getting:

Organization: Andreas                (fly launch defaults to the personal org)
Name:         onsappelle-ror         (derived from your directory name)
Region:       Paris, France          (this is the fastest region for you)
App Machines: shared-cpu-1x, 1GB RAM (most apps need about 1GB of RAM)
Postgres:     <none>                 (not requested)
Redis:        <none>                 (not requested)

X Sorry, your reply was invalid: "N¨" is not a valid answer, please try again.
? Do you want to tweak these settings before proceeding? No
Created app 'onsappelle-ror' in organization 'personal'
Admin URL: https://fly.io/apps/onsappelle-ror
Hostname: onsappelle-ror.fly.dev
Wrote config file fly.toml
Validating /home/andre/workspace/onsappelle-ror/fly.toml
Platform: machines
✓ Configuration is valid
==> Building image
Searching for image 'flyio/hellofly:latest' remotely...
image found: img_z1nr0lpjz9v5q98w

Watch your deployment at https://fly.io/apps/onsappelle-ror/monitoring

Provisioning ips for onsappelle-ror
  Dedicated ipv6: 2a09:8280:1::4e:d937
  Shared ipv4: 66.241.124.227
  Add a dedicated ipv4 with: fly ips allocate-v4

Error: input:3: createRelease We need your payment information to continue! Add a credit card or buy credit: https://fly.io/dashboard/andreas-58/billing
#+end_src

https://fly.io/docs/about/pricing/
We don’t offer a “free tier.” Instead, we offer some free resource allowances that apply to all plans, including the Hobby plan

Hobby plan is 5$ /month, which you only find out after creating an account :P
** render.com, free but db wipes (or 7$ month)
https://mysite-1psl.onrender.com/

postgres mandatory but free version expires after 90 days

found them on this blog [[https://dev.to/render/deploying-your-rails-6-app-4an4][here]]



https://render.com/pricing

https://docs.render.com/deploy-rails

They tell to switch from sqlite to postgres
How to continue using [[https://medium.com/@codetrouble/how-to-deploy-your-rails-app-with-both-sqlite-and-postgresql-on-render-7369ab50d04b][sqlite in development]]

add pg to [[file:Gemfile::add postgres for render.com][Gemfile]]
#+begin_src bash
$ bundle install
Unable to find PostgreSQL client library.

Please install libpq or postgresql client package like so:
  sudo apt install libpq-dev

#+end_src
configure pg for production in [[file:config/database.yml::production:][database.yml]]

set the RAILS_MASTER_KEY env variable.
If you don't have a file config/master.key
generate one with
#+begin_src bash
VISUAL="vi" bin/rails credentials:edit
#+end_src
see [[https://stackoverflow.com/questions/54064347/rails-during-asset-precompile-throws-error-key-must-be-16-bytes][stackoverflow]]

But it should be possible to have an sqlite on disk
disk is for paid plan 7$ /month
https://docs.render.com/disks
** google cloud
https://cloud.google.com/ruby/rails/
